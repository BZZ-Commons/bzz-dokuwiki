====== LU05.A10 - Einfacher Decorator ======

<WRAP center round todo 60%>
Erstellen Sie einen einfachen Decorator, der die Ausführung einer Funktion zählt.
</WRAP>

===== Aufgabenstellung =====
Ihr Ziel ist es, einen Decorator namens ''count_calls'' zu schreiben, der die Anzahl der Aufrufe für jede Funktion, die er dekoriert, zählt. Der Decorator soll bei jedem Aufruf der dekorierten Funktion eine Nachricht ausgeben, die besagt, wie oft die Funktion bisher aufgerufen wurde.

==== Code-Vorlage ====
{{gh>https://github.com/templates-python/m323-lu05-a10-decorator/blob/main/main.py}}

===== Vorgehen =====
  - Akzeptiere das GitHub Classroom Assignment
  - Klone dein persönliches Repository in die Entwicklungsumgebung
  - Implementiere den Decorator ''count_calls'' gemäß der Anleitung

===== Abgabe =====
Die Abgabe der Lösung erfolgt als Push in das persönliche GitHub-Repository.


----
<details>
<summary>//=> GitHub Repo für externe Besucher//</summary>
GitHub Repository https://github.com/templates-python/m323-lu05-a10-decorator

//Lernende am BZZ müssen den Link zum GitHub Classroom Assignment verwenden//

</details>
[[https://creativecommons.org/licenses/by-nc-sa/4.0/ch/|{{https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png}}]] (c) Kevin Maurizi 