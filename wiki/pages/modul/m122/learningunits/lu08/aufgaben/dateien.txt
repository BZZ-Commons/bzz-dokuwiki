====== LU08.A01: Arbeiten mit Dateien und Verzeichnissen ======

<WRAP center round todo 60%>
Verwende das ''subprocess''-Modul in Python, um mehrere Bash-Befehle auszuführen und die Ergebnisse zu verarbeiten.
</WRAP>
 

===== Aufgabe =====

Erstelle ein Python-Skript, das folgende Schritte ausführt:

  -  **Erstellen eines neuen Verzeichnisses**:
    * Das Skript soll ein neues Verzeichnis mit dem Namen ''python_bash_test'' im Verzeichnis ''/tmp'' erstellen.
    * Überprüfe, ob das Verzeichnis erfolgreich erstellt wurde (''ls -l /tmp'').
  - **Erstellen von Dateien im neuen Verzeichnis**:
    * Erstelle drei leere Dateien (''file1.txt'', ''file2.txt'', ''file3.txt'') im Verzeichnis ''python_bash_test''.
  - **Auflisten der Dateien**:
    * Liste den Inhalt des Verzeichnisses ''python_bash_test'' mit dem Befehl ''ls'' auf und geben Sie die Ausgabe in der Konsole aus.
  - **Dateigröße anzeigen**:
    * Zeige die Grösse der Dateien in diesem Verzeichnis mit dem Befehl ''du -h'' an.
  - **Zusatz (optional)**:
    * Lösche eine der Dateien (''file3.txt'') und geben Sie anschließend die aktualisierte Liste der Dateien aus.

===== Hinweise=====
<WRAP center round tip 60%>
Das Python-Skript kann nicht unter Windows ausgeführt werden, da wir Bash-Befehle nutzen.

Um auf das Windows-Laufwerk ''C'' zuzugreifen, verwendest du im WSL den Pfad ''/mnt/c''.

</WRAP>

===== Beispielcode für den Einstieg =====


Hier ist der Aufbau des Skripts als Orientierungshilfe:

<code python>
import subprocess

def create_directory(directory_name):
    """ Creates a new directory """
    pass
    

def create_files(directory_name, file_names):
    """ Creates all files in the list """
    pass

# Functions for steps 3-5

if __name__ == '__main__':
    directory = 'python_bash_test'
    files = ['file1.txt', 'file2.txt', 'file3.txt']
    
    create_directory(directory)
    create_files(directory, files)
    # call functions for step 3-5
</code>

---

===== Erwartete Ergebnisse =====


Beim Ausführen des Skripts sollte die Konsole folgendes ausgeben:

==== Nach Schritt 1: ====

<code>
   Verzeichnis 'python_bash_test' erfolgreich erstellt.
</code>

==== Nach Schritt 2: ====

<code>
   Datei 'python_bash_test/file1.txt' erfolgreich erstellt.
   Datei 'python_bash_test/file2.txt' erfolgreich erstellt.
   Datei 'python_bash_test/file3.txt' erfolgreich erstellt.
</code>

==== Nach Schritt 3 (Liste der Dateien): ====

<code>
   Dateien im Verzeichnis 'python_bash_test':
   file1.txt
   file2.txt
   file3.txt
</code>

==== Nach Schritt 4 (Dateigröße): ====

<code>
   Größen der Dateien im Verzeichnis 'python_bash_test':
   0B file1.txt
   0B file2.txt
   0B file3.txt
</code>

==== Nach Schritt 5 (Aktualisierte Liste nach Löschung): ====

<code>
   Datei 'python_bash_test/file3.txt' wurde gelöscht.
   Aktualisierte Dateien im Verzeichnis:
   file1.txt
   file2.txt
</code>

----
{{tag>M122-LU08}}
[[https://creativecommons.org/licenses/by-nc-sa/4.0/|{{https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png}}]] Marcel Suter