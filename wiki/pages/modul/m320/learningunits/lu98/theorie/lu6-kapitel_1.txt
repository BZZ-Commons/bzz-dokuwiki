===== 1. Komposition und Aggregation =====

==== Beziehungsarten ====

Komposition und Aggregation repr√§sentieren jeweils ein Ganzes und seine Teile. Sie erg√§nzen damit die Assoziationen resp. Beziehungsarten, welche Sie bereits aus der LU03 kennen:

^Assoziation^Beispiel (siehe Abb. 1)      ^
|Allgemein  |Mitarbeiter - Firma          |
|Einseitig  |Geldbeutel - Mensch          |
|Zweiseitig |Kunde - Konto                |
|Komposition|Blume - Bl√ºte, Wurzel        |
|Aggregation|Lampe - Fassung, Leuchtk√∂rper|

{{modul:m320:learningunits:lu98:theorie:abb1.png?nolink&600|Abb. 1: Beispiele f√ºr Assoziationen}}\\
//Abb. 6.1:// Beispiele von verschiednenen Assoziationen

=== Teile-Ganzes Beziehung === 

  - Komposition: Die Einzelteile sind **existenziell abh√§ngig** vom Ganzen. Wird eine Blume in ihre Einzelteile zerlegt, kann keine neue Blume daraus gebildet werden. Dasselbe gilt f√ºr einen Raum ohne Geb√§ude. 
  - Aggregation: Die Einzelteile sind **auch alleine ‚Äúlebensf√§hig‚Äù**. Ein Leuchtk√∂rper kann der einen Lampe entnommen und in einer anderen Lampe verwendet werden. Ein Student existiert unabh√§ngig von einer Vorlesung, kann mehrere Vorlesungen besuchen und ist dennoch jeweils Teil davon. Ein Rad oder Motor kann aus einem Auto ausgebaut und in einem anderen wieder verbaut werden.

{{modul:m320:learningunits:lu98:theorie:abb2.png?nolink&200|Abb. 2: Beispiele f√ºr Aggregationen}}\\
//Abb. 6.2:// Beispiele f√ºr Komposition und Aggregation

=== Notation ===

  * Die Raute geh√∂rt auf die Seite des Ganzen. 
  * Der Pfeil auf der Seite der Teile ist optional (siehe Bl√ºte und Leuchtk√∂rpen in Abb. 1). 
  * Er sollte jedoch entweder f√ºr alle Teile gezeichnet oder aber konsequent weggelassen werden (d.h. nicht so machen wie in Abb. 1 üòâ)

==== Was ist eine Aggregation resp. Aggregat? ====

**Aggregation** ist der Sonderfall einer gerichteten Assoziation. Sie dr√ºckt ein starkes Verh√§ltnis von zwei an sich **selbst√§ndigen Objekten** aus, von denen eines **Teil des** anderen ist.

{{modul:m320:learningunits:lu98:theorie:abb3.png?nolink&600|Abb. 3: Umsetzung Aggregation}}\\
//Abb. 6.3:// Umsetzung Aggregation (d.h. eigenst√§ndige Referenzen und zuf√ºgen der Komponenten √ºber set Methode resp. Property)

=== Eigenschaften === 

  * Komponente kann (zus√§tzlich) einem anderen Aggregat derselben Klasse zugeordnet oder einer anderen Klasse zugeordnet sein
  * Komponente existiert unabh√§ngig vom Aggregat

==== Was ist eine Komposition? ====

Die Spezialform eines Aggregats, welches wie bereits erw√§hnt aus **existenziell abh√§ngigen** Komponenten besteht, nennt man **Komposition**. Sie wird auch als ‚Äúechte Aggregation‚Äù bezeichnet und √ºbernimmt die dynamische Weiterleitung von Botschaften an ihre Komponenten.

{{modul:m320:learningunits:lu98:theorie:abb4.png?nolink&600|Abb. 4: Umsetzung Komposition}}\\
//Abb. 6.4:// Umsetzung Komposition (d.h. keine eigenst√§ndige Referenzen und Objekte im Konstruktor erzeugen)

=== Eigenschaften ===

  * Erzeugung der Komposition erzeugt auch deren Komponenten 
  * L√∂schung der Komposition l√∂scht auch deren Komponenten

=== R√ºckblick Delegation ===

In der LU05 haben Sie zum Thema //Delegation// gelernt, dass die Klasse ''%%Eck%%'' vier Instanzen der Klasse ''%%Punkt%%'' ‚Äúaggregiert‚Äù. Ein Punkt ist Teil eines Ecks. Da der Punkt aber "sein" Eck nicht kennt, handelt es sich hierbei um eine gerichtete, einseitige Beziehung mit einer entsprechenden Kardinalit√§t. Weil hier ein ''Punkt'' ohne ''Eck'' wenig Sinn macht und darum existenziell von ''Eck'' abh√§ngig ist, handelt es sich bei dieser Teile-Ganzes Beziehung um eine Komposition.

{{modul:m320:learningunits:lu98:theorie:abb5.png?nolink&200|Abb. 5: Ein Punkt ist Teil eines Ecks}}\\
//Abb. 6.5:// Komposition eines Vierecks

----
Quellen:

  * [[https://de.wikipedia.org/wiki/Assoziation_%28UML%29|Assoziation UML]]
  * [[https://www.oszhandel.de/gymnasium/faecher/informatik/ooa-ood/beziehungen_2.htm|Referenzbeziehungen]]
  * [[https://www.prob.st/java/lu/lu-E.html|OOP by Ren√© Probst]]
